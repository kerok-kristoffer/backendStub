// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0

package db

import (
	"database/sql"
	"time"

	"github.com/google/uuid"
)

type Batch struct {
	ID             int64          `json:"id"`
	UserID         int64          `json:"userID"`
	Name           string         `json:"name"`
	Description    sql.NullString `json:"description"`
	ProductionDate sql.NullTime   `json:"productionDate"`
	ExpiryDate     time.Time      `json:"expiryDate"`
	CreatedAt      time.Time      `json:"createdAt"`
	UpdatedAt      time.Time      `json:"updatedAt"`
}

type BatchItem struct {
	ID                  int64     `json:"id"`
	Amount              int32     `json:"amount"`
	InventoryItemID     int64     `json:"inventoryItemID"`
	FormulaIngredientID int64     `json:"formulaIngredientID"`
	BatchID             int64     `json:"batchID"`
	UserID              int64     `json:"userID"`
	Description         string    `json:"description"`
	CreatedAt           time.Time `json:"createdAt"`
	UpdatedAt           time.Time `json:"updatedAt"`
}

type Currency struct {
	ID        int64     `json:"id"`
	Name      string    `json:"name"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
}

type Entry struct {
	ID        int64         `json:"id"`
	UserID    sql.NullInt64 `json:"userID"`
	Amount    sql.NullInt64 `json:"amount"`
	CreatedAt time.Time     `json:"createdAt"`
}

type Formula struct {
	ID              int64     `json:"id"`
	Name            string    `json:"name"`
	DefaultAmount   float32   `json:"defaultAmount"`
	DefaultAmountOz float32   `json:"defaultAmountOz"`
	Description     string    `json:"description"`
	UserID          int64     `json:"userID"`
	CreatedAt       time.Time `json:"createdAt"`
	UpdatedAt       time.Time `json:"updatedAt"`
}

type FormulaIngredient struct {
	ID           int64           `json:"id"`
	IngredientID int64           `json:"ingredientID"`
	Percentage   float32         `json:"percentage"`
	Description  sql.NullString  `json:"description"`
	PhaseID      int64           `json:"phaseID"`
	Cost         sql.NullFloat64 `json:"cost"`
	UpdateID     uuid.UUID       `json:"updateID"`
	CreatedAt    time.Time       `json:"createdAt"`
	UpdatedAt    time.Time       `json:"updatedAt"`
}

type FormulaTag struct {
	ID     int64  `json:"id"`
	UserID int64  `json:"userID"`
	Name   string `json:"name"`
}

type FormulaTagMap struct {
	ID           int64 `json:"id"`
	FormulaID    int64 `json:"formulaID"`
	FormulaTagID int64 `json:"formulaTagID"`
}

type Ingredient struct {
	ID         int64           `json:"id"`
	Name       string          `json:"name"`
	Inci       string          `json:"inci"`
	Hash       string          `json:"hash"`
	UserID     int64           `json:"userID"`
	FunctionID sql.NullInt64   `json:"functionID"`
	Cost       sql.NullFloat64 `json:"cost"`
	CreatedAt  time.Time       `json:"createdAt"`
	UpdatedAt  time.Time       `json:"updatedAt"`
}

type IngredientFunction struct {
	ID        int64     `json:"id"`
	Name      string    `json:"name"`
	UserID    int64     `json:"userID"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
}

type IngredientTag struct {
	ID        int64     `json:"id"`
	Name      string    `json:"name"`
	UserID    int64     `json:"userID"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
}

type IngredientTagMap struct {
	ID              int64 `json:"id"`
	IngredientTagID int64 `json:"ingredientTagID"`
	IngredientID    int64 `json:"ingredientID"`
}

type InventoryItem struct {
	ID            int64     `json:"id"`
	UserID        int64     `json:"userID"`
	IngredientID  int64     `json:"ingredientID"`
	AmountInGrams int32     `json:"amountInGrams"`
	CostPerGram   float32   `json:"costPerGram"`
	CurrencyID    int64     `json:"currencyID"`
	ExpiryDate    time.Time `json:"expiryDate"`
	CreatedAt     time.Time `json:"createdAt"`
	UpdatedAt     time.Time `json:"updatedAt"`
}

type Phase struct {
	ID          int64     `json:"id"`
	Name        string    `json:"name"`
	Description string    `json:"description"`
	FormulaID   int64     `json:"formulaID"`
	UpdateID    uuid.UUID `json:"updateID"`
	CreatedAt   time.Time `json:"createdAt"`
	UpdatedAt   time.Time `json:"updatedAt"`
}

type Session struct {
	ID           uuid.UUID `json:"id"`
	UserName     string    `json:"userName"`
	RefreshToken string    `json:"refreshToken"`
	UserAgent    string    `json:"userAgent"`
	ClientIp     string    `json:"clientIp"`
	IsBlocked    bool      `json:"isBlocked"`
	ExpiresAt    time.Time `json:"expiresAt"`
	CreatedAt    time.Time `json:"createdAt"`
}

type Stripe struct {
	ID               uuid.UUID      `json:"id"`
	UserID           int64          `json:"userID"`
	StripeCustomerID sql.NullString `json:"stripeCustomerID"`
	StripePlanID     uuid.UUID      `json:"stripePlanID"`
	CreatedAt        time.Time      `json:"createdAt"`
	UpdatedAt        time.Time      `json:"updatedAt"`
}

type StripePlan struct {
	ID           uuid.UUID `json:"id"`
	Name         string    `json:"name"`
	UserAccessID int32     `json:"userAccessID"`
	CreatedAt    time.Time `json:"createdAt"`
	UpdatedAt    time.Time `json:"updatedAt"`
}

type Tester struct {
	ID        int64         `json:"id"`
	UserID    sql.NullInt64 `json:"userID"`
	Email     string        `json:"email"`
	CreatedAt time.Time     `json:"createdAt"`
	UpdatedAt time.Time     `json:"updatedAt"`
}

type Transfer struct {
	ID         int64         `json:"id"`
	FromUserID sql.NullInt64 `json:"fromUserID"`
	ToUserID   sql.NullInt64 `json:"toUserID"`
	Amount     sql.NullInt64 `json:"amount"`
	CreatedAt  time.Time     `json:"createdAt"`
}

type User struct {
	ID        int64     `json:"id"`
	UserName  string    `json:"userName"`
	Email     string    `json:"email"`
	FullName  string    `json:"fullName"`
	Hash      string    `json:"hash"`
	CreatedAt time.Time `json:"createdAt"`
}

type Version struct {
	ID        int64           `json:"id"`
	Number    sql.NullFloat64 `json:"number"`
	CreatedAt time.Time       `json:"createdAt"`
	UpdatedAt time.Time       `json:"updatedAt"`
}
