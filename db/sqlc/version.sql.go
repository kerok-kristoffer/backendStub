// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: version.sql

package db

import (
	"context"
	"database/sql"
)

const createVersion = `-- name: CreateVersion :one
INSERT INTO versions (
                      number
) VALUES (
          $1
         ) RETURNING id, number, created_at, updated_at
`

func (q *Queries) CreateVersion(ctx context.Context, number sql.NullFloat64) (Version, error) {
	row := q.db.QueryRowContext(ctx, createVersion, number)
	var i Version
	err := row.Scan(
		&i.ID,
		&i.Number,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getLatestVersion = `-- name: GetLatestVersion :one
SELECT id, number, created_at, updated_at FROM versions
ORDER BY number
LIMIT 1
`

func (q *Queries) GetLatestVersion(ctx context.Context) (Version, error) {
	row := q.db.QueryRowContext(ctx, getLatestVersion)
	var i Version
	err := row.Scan(
		&i.ID,
		&i.Number,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
